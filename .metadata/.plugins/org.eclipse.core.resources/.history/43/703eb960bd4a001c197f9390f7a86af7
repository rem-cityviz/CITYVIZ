package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class API {

    /**
     * buildURL: return the API Url with the parameters from the config_API.csv file
     * 
     * 
     * {talendTypes} String dataset, String q, int rows, 
     * 
     * {Category} API 
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} "https://data.economie.gouv.fr/api/records/1.0/search/?dataset=decp_augmente"
     */
    public static String buildURL(String dataset, String q, String rows, String start, String lang, String geoFilter_long, String geoFilter_lat, String distance) {
    	
    	String url = "https://data.economie.gouv.fr/api/records/1.0/search/?dataset=";
    	
        url += dataset +"&"; 
        if(q != null) url += "q=" + q + "&";
        if(rows != null) url += "rows=" + rows +"&";
        if(start != null) url += "start=" + start + "&";
        if(lang != null) url += "lang=" + lang + "&";
        if(geoFilter_long != null && geoFilter_lat != null) url += "geofilter.distance=" + geoFilter_long + "%2C+" + geoFilter_lat + "%2C+" + distance;
        else {
        	// msg pour avertir qu'il faut longitude + latitude + distance pour filter la geolocalisation des march√©s.
        }
        
       
        return url;
    }
}
